[{"D:\\coding\\Purwadhika\\Collab\\saptweet-fe\\client\\src\\index.js":"1","D:\\coding\\Purwadhika\\Collab\\saptweet-fe\\client\\src\\reportWebVitals.js":"2","D:\\coding\\Purwadhika\\Collab\\saptweet-fe\\client\\src\\App.js":"3","D:\\coding\\Purwadhika\\Collab\\saptweet-fe\\client\\src\\app\\store.js":"4","D:\\coding\\Purwadhika\\Collab\\saptweet-fe\\client\\src\\features\\posts\\postSlice.js":"5","D:\\coding\\Purwadhika\\Collab\\saptweet-fe\\client\\src\\pages\\home\\index.jsx":"6","D:\\coding\\Purwadhika\\Collab\\saptweet-fe\\client\\src\\pages\\tweet\\index.jsx":"7","D:\\coding\\Purwadhika\\Collab\\saptweet-fe\\client\\src\\pages\\user\\index.jsx":"8","D:\\coding\\Purwadhika\\Collab\\saptweet-fe\\client\\src\\pages\\login\\index.jsx":"9","D:\\coding\\Purwadhika\\Collab\\saptweet-fe\\client\\src\\pages\\navbar\\index.jsx":"10","D:\\coding\\Purwadhika\\Collab\\saptweet-fe\\client\\src\\features\\posts\\postlists\\index.jsx":"11","D:\\coding\\Purwadhika\\Collab\\saptweet-fe\\client\\src\\pages\\sidebar\\index.jsx":"12","D:\\coding\\Purwadhika\\Collab\\saptweet-fe\\client\\src\\features\\posts\\addpostform\\index.jsx":"13","D:\\coding\\Purwadhika\\Collab\\saptweet-fe\\client\\src\\pages\\register\\index.jsx":"14"},{"size":801,"mtime":1698462463542,"results":"15","hashOfConfig":"16"},{"size":375,"mtime":1698462463558,"results":"17","hashOfConfig":"16"},{"size":582,"mtime":1698587728174,"results":"18","hashOfConfig":"16"},{"size":193,"mtime":1698462463542,"results":"19","hashOfConfig":"16"},{"size":669,"mtime":1698462463542,"results":"20","hashOfConfig":"16"},{"size":695,"mtime":1698584767211,"results":"21","hashOfConfig":"16"},{"size":2177,"mtime":1698587555494,"results":"22","hashOfConfig":"16"},{"size":1327,"mtime":1698587979695,"results":"23","hashOfConfig":"16"},{"size":3922,"mtime":1698588544779,"results":"24","hashOfConfig":"16"},{"size":1251,"mtime":1698584758839,"results":"25","hashOfConfig":"16"},{"size":2233,"mtime":1698462463542,"results":"26","hashOfConfig":"16"},{"size":599,"mtime":1698583891949,"results":"27","hashOfConfig":"16"},{"size":3072,"mtime":1698462463542,"results":"28","hashOfConfig":"16"},{"size":4068,"mtime":1698588046283,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"zbui92",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"33"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"33"},"D:\\coding\\Purwadhika\\Collab\\saptweet-fe\\client\\src\\index.js",[],[],["75"],"D:\\coding\\Purwadhika\\Collab\\saptweet-fe\\client\\src\\reportWebVitals.js",[],[],"D:\\coding\\Purwadhika\\Collab\\saptweet-fe\\client\\src\\App.js",[],[],"D:\\coding\\Purwadhika\\Collab\\saptweet-fe\\client\\src\\app\\store.js",[],[],"D:\\coding\\Purwadhika\\Collab\\saptweet-fe\\client\\src\\features\\posts\\postSlice.js",[],[],"D:\\coding\\Purwadhika\\Collab\\saptweet-fe\\client\\src\\pages\\home\\index.jsx",[],[],"D:\\coding\\Purwadhika\\Collab\\saptweet-fe\\client\\src\\pages\\tweet\\index.jsx",[],[],"D:\\coding\\Purwadhika\\Collab\\saptweet-fe\\client\\src\\pages\\user\\index.jsx",[],[],"D:\\coding\\Purwadhika\\Collab\\saptweet-fe\\client\\src\\pages\\login\\index.jsx",["76","77"],[],"D:\\coding\\Purwadhika\\Collab\\saptweet-fe\\client\\src\\pages\\navbar\\index.jsx",[],[],"D:\\coding\\Purwadhika\\Collab\\saptweet-fe\\client\\src\\features\\posts\\postlists\\index.jsx",[],[],"D:\\coding\\Purwadhika\\Collab\\saptweet-fe\\client\\src\\pages\\sidebar\\index.jsx",[],[],"D:\\coding\\Purwadhika\\Collab\\saptweet-fe\\client\\src\\features\\posts\\addpostform\\index.jsx",["78","79","80","81","82","83","84","85"],[],"import {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  FormControl,\r\n  Input,\r\n  Spacer,\r\n  Text,\r\n  Textarea,\r\n  VStack,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { nanoid } from \"@reduxjs/toolkit\";\r\nimport { postAdded } from \"../postSlice\";\r\nimport axios from \"axios\";\r\nimport { useEffect } from \"react\";\r\nimport { useFormik } from \"formik\";\r\n\r\nexport default function AddPostForm() {\r\n  const [content, setContent] = useState([]);\r\n  const [user, setUser] = useState([]);\r\n  const [onlineUser, setOnlineUser] = useState(\"\");\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:3001/tweets\");\r\n      setContent(response.data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const fetchDataOnline = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:3000/users\");\r\n      console.log(`---FETCH ONLINE USER---`);\r\n      setUser(response.data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchDataOnline();\r\n  }, []);\r\n\r\n  function online() {\r\n    user.map((item) => {\r\n      item.isLogin === \"true\" ? setOnlineUser(item.username) : console.log(\"\");\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    online();\r\n  });\r\n  const tweet = async (username, tweet, time) => {\r\n    try {\r\n      await axios.post(\"http://localhost:3001/tweets\", {\r\n        username,\r\n        tweet,\r\n        time,\r\n      });\r\n      alert(\"success\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      tweet: \"\",\r\n      time: \"10/12/2023\",\r\n    },\r\n    onSubmit: (values) => {\r\n      tweet((values.username = onlineUser), values.tweet, values.time);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Box p={\".5em\"} bgColor={\"#3876BF\"} borderRadius={\"1em\"} color={\"white\"}>\r\n      <VStack align={\"stretch\"}>\r\n        <Box >\r\n          <Center>\r\n          <Text as={\"b\"}>Tweet your speech</Text>\r\n          </Center>\r\n        </Box>\r\n        <Box>\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <VStack align={\"stretch\"}>\r\n              <Box>\r\n                <FormControl>\r\n                  <Textarea\r\n                    id=\"tweet\"\r\n                    type=\"text\"\r\n                    name=\"tweet\"\r\n                    value={formik.values.tweet}\r\n                    onChange={formik.handleChange}\r\n                    bgColor={\"white\"}\r\n                    color={\"black\"}\r\n                  />\r\n                </FormControl>\r\n              </Box>\r\n              <Box>\r\n                <Button\r\n                  type=\"submit\"\r\n                  // onClick={onSavePostClicked} \r\n                  // bgColor={\"transparent\"}\r\n                  size={\"sm\"}\r\n                >\r\n                  Tweet\r\n                </Button>\r\n              </Box>\r\n            </VStack>\r\n          </form>\r\n        </Box>\r\n      </VStack>\r\n    </Box>\r\n  );\r\n}\r\n","D:\\coding\\Purwadhika\\Collab\\saptweet-fe\\client\\src\\pages\\register\\index.jsx",["86","87","88"],[],"import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Input,\r\n  InputGroup,\r\n  FormControl,\r\n  FormErrorMessage,\r\n  FormLabel,\r\n  Center,\r\n} from \"@chakra-ui/react\";\r\nimport { useFormik } from \"formik\";\r\nimport Navbar from \"../navbar\";\r\n\r\nconst LoginSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .email(\"Invalid email address format\")\r\n    .required(\"Email is required\"),\r\n  password: Yup.string()\r\n    .min(7, \"password must be 7 characters minimum\")\r\n    .required(\"email is required\"),\r\n});\r\nfunction Register() {\r\n  const register = async (email, password, username, isLogin) => {\r\n    try {\r\n      await axios.post(\"http://localhost:3000/users\", {\r\n        email,\r\n        password,\r\n        username,\r\n      });\r\n      alert(\"Success\");\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n      username: \"\",\r\n    },\r\n    // validationSchema: LoginSchema,\r\n    onSubmit: (values) => {\r\n      register(values.email, values.password, values.username);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Box>\r\n      <Navbar />\r\n      <Box p={\"5em\"}>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <FormLabel>Email </FormLabel>\r\n          <FormControl isInvalid={formik.touched.email && formik.errors.email}>\r\n            <InputGroup>\r\n              <Input\r\n                size=\"lg\"\r\n                type=\"text\"\r\n                name=\"email\"\r\n                placeholder=\"Input Your Email\"\r\n                value={formik.values.email}\r\n                onChange={formik.handleChange}\r\n                border=\"2px solid #192655\"\r\n                color=\"black\"\r\n                _hover={\"none\"}\r\n                variant={\"ghost\"}\r\n                _focus={{ border: \"3px solid #192655\" }}\r\n              />\r\n            </InputGroup>\r\n            {formik.touched.password && formik.errors.password && (\r\n              <FormErrorMessage>{formik.errors.email}</FormErrorMessage>\r\n            )}\r\n          </FormControl>\r\n          <FormLabel>Username </FormLabel>\r\n          <FormControl\r\n            isInvalid={formik.touched.email && formik.errors.email}\r\n            nb={5}\r\n          >\r\n            <InputGroup>\r\n              <Input\r\n                size=\"lg\"\r\n                type=\"text\"\r\n                name=\"username\"\r\n                placeholder=\"Input Your Username\"\r\n                value={formik.values.username}\r\n                onChange={formik.handleChange}\r\n                border=\"2px solid #192655\"\r\n                color=\"black\"\r\n                _hover={\"none\"}\r\n                variant={\"ghost\"}\r\n                _focus={{ border: \"3px solid #192655\" }}\r\n              />\r\n            </InputGroup>\r\n          </FormControl>\r\n          <FormLabel>Password</FormLabel>\r\n          <FormControl\r\n            isInvalid={formik.touched.email && formik.errors.email}\r\n            nb={5}\r\n          >\r\n            <InputGroup>\r\n              <Input\r\n                size=\"lg\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Input Your Password\"\r\n                value={formik.values.password}\r\n                onChange={formik.handleChange}\r\n                border=\"2px solid #192655\"\r\n                color=\"black\"\r\n                _hover={\"none\"}\r\n                variant={\"ghost\"}\r\n                _focus={{ border: \"3px solid #192655\" }}\r\n              />\r\n            </InputGroup>\r\n            {formik.touched.password && formik.errors.password && (\r\n              <FormErrorMessage>{formik.errors.email}</FormErrorMessage>\r\n            )}\r\n          </FormControl>\r\n\r\n          <Center>\r\n            <Button\r\n              textColor={\"White\"}\r\n              as={\"b\"}\r\n              bgColor={\"#3876BF\"}\r\n              type={\"submit\"}\r\n              mt={\"1em\"}\r\n            >\r\n              REGISTER\r\n            </Button>\r\n          </Center>\r\n        </form>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n",{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":18,"column":7,"nodeType":"93","messageId":"94","endLine":18,"endColumn":18},{"ruleId":"91","severity":1,"message":"95","line":59,"column":9,"nodeType":"93","messageId":"94","endLine":59,"endColumn":14},{"ruleId":"91","severity":1,"message":"96","line":6,"column":3,"nodeType":"93","messageId":"94","endLine":6,"endColumn":8},{"ruleId":"91","severity":1,"message":"97","line":7,"column":3,"nodeType":"93","messageId":"94","endLine":7,"endColumn":9},{"ruleId":"91","severity":1,"message":"98","line":13,"column":10,"nodeType":"93","messageId":"94","endLine":13,"endColumn":21},{"ruleId":"91","severity":1,"message":"99","line":13,"column":23,"nodeType":"93","messageId":"94","endLine":13,"endColumn":34},{"ruleId":"91","severity":1,"message":"100","line":14,"column":10,"nodeType":"93","messageId":"94","endLine":14,"endColumn":16},{"ruleId":"91","severity":1,"message":"101","line":15,"column":10,"nodeType":"93","messageId":"94","endLine":15,"endColumn":19},{"ruleId":"91","severity":1,"message":"102","line":21,"column":10,"nodeType":"93","messageId":"94","endLine":21,"endColumn":17},{"ruleId":"103","severity":1,"message":"104","line":50,"column":21,"nodeType":"105","messageId":"106","endLine":50,"endColumn":23},{"ruleId":"91","severity":1,"message":"107","line":1,"column":10,"nodeType":"93","messageId":"94","endLine":1,"endColumn":19},{"ruleId":"91","severity":1,"message":"108","line":1,"column":21,"nodeType":"93","messageId":"94","endLine":1,"endColumn":29},{"ruleId":"91","severity":1,"message":"92","line":17,"column":7,"nodeType":"93","messageId":"94","endLine":17,"endColumn":18},"no-new-object",["109"],"no-unused-vars","'LoginSchema' is assigned a value but never used.","Identifier","unusedVar","'check' is assigned a value but never used.","'Input' is defined but never used.","'Spacer' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'nanoid' is defined but never used.","'postAdded' is defined but never used.","'content' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useEffect' is defined but never used.","'useState' is defined but never used.","no-object-constructor"]