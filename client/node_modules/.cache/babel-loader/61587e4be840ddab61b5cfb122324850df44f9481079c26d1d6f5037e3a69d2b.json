{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = [];\nconst postsSlice = createSlice({\n  name: \"posts\",\n  initialState,\n  reducers: {\n    postAdded(state, action) {\n      state.push(action.payload);\n    },\n    postUpdated(state, action) {\n      const {\n        id,\n        title,\n        content,\n        user\n      } = action.payload;\n      const existingPost = state.find(post => post.id === id);\n      if (existingPost) {\n        existingPost.title = title;\n        existingPost.content = content;\n        existingPost.user = user;\n      }\n    }\n  }\n});\nexport const {\n  postAdded,\n  postUpdated\n} = postsSlice.actions;\nexport default postsSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","postsSlice","name","reducers","postAdded","state","action","push","payload","postUpdated","id","title","content","user","existingPost","find","post","actions","reducer"],"sources":["S:/Purwadhika/saptweet-fe/client/src/features/posts/postSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = [];\r\n\r\nconst postsSlice = createSlice({\r\n  name: \"posts\",\r\n  initialState,\r\n  reducers: {\r\n    postAdded(state, action) {\r\n      state.push(action.payload);\r\n    },\r\n    postUpdated(state, action) {\r\n      const { id, title, content, user } = action.payload;\r\n      const existingPost = state.find((post) => post.id === id);\r\n      if (existingPost) {\r\n        existingPost.title = title;\r\n        existingPost.content = content;\r\n        existingPost.user = user;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { postAdded, postUpdated } = postsSlice.actions;\r\n\r\nexport default postsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG,EAAE;AAEvB,MAAMC,UAAU,GAAGF,WAAW,CAAC;EAC7BG,IAAI,EAAE,OAAO;EACbF,YAAY;EACZG,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACvBD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAC5B,CAAC;IACDC,WAAWA,CAACJ,KAAK,EAAEC,MAAM,EAAE;MACzB,MAAM;QAAEI,EAAE;QAAEC,KAAK;QAAEC,OAAO;QAAEC;MAAK,CAAC,GAAGP,MAAM,CAACE,OAAO;MACnD,MAAMM,YAAY,GAAGT,KAAK,CAACU,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACN,EAAE,KAAKA,EAAE,CAAC;MACzD,IAAII,YAAY,EAAE;QAChBA,YAAY,CAACH,KAAK,GAAGA,KAAK;QAC1BG,YAAY,CAACF,OAAO,GAAGA,OAAO;QAC9BE,YAAY,CAACD,IAAI,GAAGA,IAAI;MAC1B;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAET,SAAS;EAAEK;AAAY,CAAC,GAAGR,UAAU,CAACgB,OAAO;AAE5D,eAAehB,UAAU,CAACiB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}