{"ast":null,"code":"var _jsxFileName = \"D:\\\\coding\\\\Purwadhika\\\\Collab\\\\saptweet-fe\\\\client\\\\src\\\\features\\\\posts\\\\addpostform\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { Box, Button, Center, FormControl, Input, Spacer, Text, Textarea, VStack } from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { nanoid } from \"@reduxjs/toolkit\";\nimport { postAdded } from \"../postSlice\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useFormik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddPostForm() {\n  _s();\n  const [content, setContent] = useState([]);\n  const [user, setUser] = useState([]);\n  const [onlineUser, setOnlineUser] = useState(\"\");\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3001/tweets\");\n      setContent(response.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const fetchDataOnline = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3000/users\");\n      console.log(`---FETCH ONLINE USER---`);\n      setUser(response.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  useEffect(() => {\n    fetchDataOnline();\n  }, []);\n  function online() {\n    user.map(item => {\n      item.isLogin === \"true\" ? setOnlineUser(item.username) : console.log(\"\");\n    });\n  }\n  useEffect(() => {\n    online();\n  });\n  const tweet = async (username, tweet, time) => {\n    try {\n      await axios.post(\"http://localhost:3001/tweets\", {\n        username,\n        tweet,\n        time\n      });\n      alert(\"success\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const formik = useFormik({\n    initialValues: {\n      username: \"\",\n      tweet: \"\",\n      time: \"10/12/2023\"\n    },\n    onSubmit: values => {\n      tweet(values.username = onlineUser, values.tweet, values.time);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: \".5em\",\n    bgColor: \"#3876BF\",\n    borderRadius: \"1em\",\n    color: \"white\",\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      align: \"stretch\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Center, {\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            as: \"b\",\n            children: \"Tweet your speech\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: formik.handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(VStack, {\n            align: \"stretch\",\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                children: /*#__PURE__*/_jsxDEV(Textarea, {\n                  id: \"tweet\",\n                  type: \"text\",\n                  name: \"tweet\",\n                  value: formik.values.tweet,\n                  onChange: formik.handleChange,\n                  bgColor: \"white\",\n                  color: \"black\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\"\n                // onClick={onSavePostClicked} \n                // bgColor={\"transparent\"}\n                ,\n                size: \"sm\",\n                children: \"Tweet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(AddPostForm, \"p3j7eNzO+oTQyMoy8rMi0lhGUzY=\", false, function () {\n  return [useFormik];\n});\n_c = AddPostForm;\nvar _c;\n$RefreshReg$(_c, \"AddPostForm\");","map":{"version":3,"names":["Box","Button","Center","FormControl","Input","Spacer","Text","Textarea","VStack","React","useState","useDispatch","useSelector","nanoid","postAdded","axios","useEffect","useFormik","jsxDEV","_jsxDEV","AddPostForm","_s","content","setContent","user","setUser","onlineUser","setOnlineUser","fetchData","response","get","data","err","console","log","fetchDataOnline","online","map","item","isLogin","username","tweet","time","post","alert","formik","initialValues","onSubmit","values","p","bgColor","borderRadius","color","children","align","as","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","id","type","name","value","onChange","handleChange","size","_c","$RefreshReg$"],"sources":["D:/coding/Purwadhika/Collab/saptweet-fe/client/src/features/posts/addpostform/index.jsx"],"sourcesContent":["import {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  FormControl,\r\n  Input,\r\n  Spacer,\r\n  Text,\r\n  Textarea,\r\n  VStack,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { nanoid } from \"@reduxjs/toolkit\";\r\nimport { postAdded } from \"../postSlice\";\r\nimport axios from \"axios\";\r\nimport { useEffect } from \"react\";\r\nimport { useFormik } from \"formik\";\r\n\r\nexport default function AddPostForm() {\r\n  const [content, setContent] = useState([]);\r\n  const [user, setUser] = useState([]);\r\n  const [onlineUser, setOnlineUser] = useState(\"\");\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:3001/tweets\");\r\n      setContent(response.data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const fetchDataOnline = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:3000/users\");\r\n      console.log(`---FETCH ONLINE USER---`);\r\n      setUser(response.data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchDataOnline();\r\n  }, []);\r\n\r\n  function online() {\r\n    user.map((item) => {\r\n      item.isLogin === \"true\" ? setOnlineUser(item.username) : console.log(\"\");\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    online();\r\n  });\r\n  const tweet = async (username, tweet, time) => {\r\n    try {\r\n      await axios.post(\"http://localhost:3001/tweets\", {\r\n        username,\r\n        tweet,\r\n        time,\r\n      });\r\n      alert(\"success\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      tweet: \"\",\r\n      time: \"10/12/2023\",\r\n    },\r\n    onSubmit: (values) => {\r\n      tweet((values.username = onlineUser), values.tweet, values.time);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Box p={\".5em\"} bgColor={\"#3876BF\"} borderRadius={\"1em\"} color={\"white\"}>\r\n      <VStack align={\"stretch\"}>\r\n        <Box >\r\n          <Center>\r\n          <Text as={\"b\"}>Tweet your speech</Text>\r\n          </Center>\r\n        </Box>\r\n        <Box>\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <VStack align={\"stretch\"}>\r\n              <Box>\r\n                <FormControl>\r\n                  <Textarea\r\n                    id=\"tweet\"\r\n                    type=\"text\"\r\n                    name=\"tweet\"\r\n                    value={formik.values.tweet}\r\n                    onChange={formik.handleChange}\r\n                    bgColor={\"white\"}\r\n                    color={\"black\"}\r\n                  />\r\n                </FormControl>\r\n              </Box>\r\n              <Box>\r\n                <Button\r\n                  type=\"submit\"\r\n                  // onClick={onSavePostClicked} \r\n                  // bgColor={\"transparent\"}\r\n                  size={\"sm\"}\r\n                >\r\n                  Tweet\r\n                </Button>\r\n              </Box>\r\n            </VStack>\r\n          </form>\r\n        </Box>\r\n      </VStack>\r\n    </Box>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}